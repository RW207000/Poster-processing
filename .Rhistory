totalmed_2nd_entry <- totalmed_2nd_entry %>%
rename("CO.ID" = "CO.ID_2",
"assessment_id" = "assessment_id_2")
totalmed_3rd_entry <- totalmed_3rd_entry %>%
rename("CO.ID" = "CO.ID_3",
"assessment_id" = "assessment_id_3")
totalmed_4th_entry <- totalmed_4th_entry %>%
rename("CO.ID" = "CO.ID_4",
"assessment_id" = "assessment_id_4")
totalmed_5th_entry <- totalmed_5th_entry %>%
rename("CO.ID" = "CO.ID_5",
"assessment_id" = "assessment_id_5")
totalmed_6th_entry <- totalmed_6th_entry %>%
rename("CO.ID" = "CO.ID_6",
"assessment_id" = "assessment_id_6")
meds_wide <- totalmed_1st_entry %>%
left_join(totalmed_2nd_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_3rd_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_4th_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_5th_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_6th_entry, by=c("CO.ID", "assessment_id"))
#add in 'total daily dose' from 'medperpatient' to meds_wide
totaldailyformedswide <- medperpatient %>%
select(assessment_id, total_standardised_daily_dose)
meds_wide <- meds_wide %>%
left_join(select(medperpatient, assessment_id, total_standardised_daily_dose), by = "assessment_id")
meds_wide <- meds_wide %>%
select_if(function(x) !all(is.na(x)))
medperpatient$number_of_doses <- medication_clean %>%
group_by(assessment_id) %>%
summarise(max(assessment_entry))
medicationentries <- medication_clean %>%
group_by(assessment_id) %>%
summarise(n = n())
overallvisitsstats$visitswithmed <- n_unique(meds_wide$assessment_id)
overallvisitsstats$patientswithmed <- n_unique(meds_wide$CO.ID)
write.csv(overallvisitsstats, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/overallvisitsstats.csv", row.names = F)
medication_clean$prescribedmedperpatient <- paste(medication_clean$coid_asse_id, medication_clean$Medicine)
medprescriptions <- subset(medication_clean, assessment_entry == 1)
all_prescriptions <- medprescriptions %>%
group_by(Medicine) %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n) %>%
select(1,2,5,4,3)
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-27")
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n) %>%
select(1,2,5,4,3)
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n) %>%
select(1,2,5,4,3)
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n) %>%
select(1,2,5,4,3)
remove(prescriptions_last_12m)
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n) %>%
select(1,2,5,4,3)
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
View(prescriptions_last_12m)
prescriptions_1_to_5_yrs <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment < "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
View(prescriptions_1_to_5_yrs)
7+94+13+143+2
259+2+54+7+63
write.csv(prescriptions_last_12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/prescriptions_last_12m.csv", row.names = F)
write.csv(prescriptions_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/prescriptions_1_to_5_yrs.csv", row.names = F)
knitr::opts_chunk$set(echo = TRUE)
packages <- c("tidyverse", "readxl", "dplyr", "magrittr", "mixtools", "emmeans", "readr","data.table", "lubridate", "ggplot2", "skimr", "ggstatsplot","summarytools", "knitr", "here", "ggthemes", "Amelia", "tidyr", "naniar", "stringr", "janitor")
lapply(packages, library, character.only = TRUE)
participants <- read.csv("C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/data/Core only 24.02.2025.csv", header=T, na.strings= c("", "NA"))
# participants$Date...CAH.Longitudinal.Data <- as.Date(participants$Date...CAH.Longitudinal.Data, format = "%d/%m/%Y")
medication <- read.csv("C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/data/Glucocorticoids Data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
medication <- remove_empty(medication, c("cols"), cutoff = 1)
# medication$assessment_date <- as.Date(medication$assessment_date, format = "%d/%m/%Y")
labs <- read.csv("C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/data/Labs data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
# labs$assessment_date <- as.Date(labs$assessment_date, format = "%d/%m/%Y")
longitudinal <- read.csv("C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/data/Longitudinal data 24.02.2025.csv", header=T, na.strings= c("", "NA"))
test <- merge(participants, longitudinal, by = "CO.ID",
all = TRUE)
test$Date.of.Assessment <- as.Date(test$Date.of.Assessment, format = "%d/%m/%Y")
participants$coid_assedate <- paste(participants$CO.ID, participants$Date...CAH.Longitudinal.Data, sep = " ")
duplicates <- freq(participants$coid_assedate)
duplicatesframe <- as.data.frame(duplicates)
duplicatesframe <- rownames_to_column(duplicatesframe, var="idvisitdate")
duplicatesframe <- duplicatesframe[duplicatesframe$idvisitdate != c("Total", "<NA>"),]
duplicatesframe <- duplicatesframe[-c(3:6)]
duplicateassessments <- duplicatesframe %>%
filter(Freq>1)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# freqcheck
toremove <- duplicateassessments$idvisitdate
removedrecords <- subset(participants, coid_assedate %in% toremove)
write.csv(removedrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/removed_records", row.names = F)
duplicateassessments$id <- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 1)
duplicateassessments$visitdate<- sapply(strsplit(duplicateassessments$idvisitdate," "), `[`, 2)
toremovelostparticipants <- participantsnoduplicates$CO.ID
lostparticipants <- NA
lostparticipants <- subset(participants, !CO.ID %in% toremovelostparticipants)
write.csv(lostparticipants, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/lostparticipants.csv", row.names = F)
idvisitstoremove <- duplicateassessments$idvisitdate
participantsnoduplicates <- subset(participants, !coid_assedate %in% idvisitstoremove)
freqcheck <- as.data.frame(freq(participantsnoduplicates$coid_assedate))
freqcheck <- rownames_to_column(freqcheck, var="idvisitdate")
freqcheck <- freqcheck[freqcheck$idvisitdate != c("Total", "<NA>"),]
# NEW
sex_distribution <- select(participants, Sex.at.birth)
sex_stats <- sex_distribution %>%
group_by(Sex.at.birth) %>%
summarise(n = n())
write.csv(sex_stats, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/sex_stats.csv", row.names = F)
visitsperparticipant <- test %>%
group_by(CO.ID) %>%
summarise(n=n())
overallvisitsstats <- visitsperparticipant %>%
summarise("total number of patients" = n(),
meanvisits = mean(n, na.rm = TRUE),
medianvisits = median(n, na.rm = TRUE),
sdvisits = sd(n, na.rm = TRUE),
minvisits = min(n, na.rm = TRUE),
maxvisits = max(n, na.rm = TRUE)) %>%
round(digits = 2)
overallvisitsstats$total_visits <- sum(visitsperparticipant$n)
patients_per_centre <- test %>%
group_by(Centre.ID.x) %>%
summarise(n_unique(CO.ID)) %>%
as.data.frame() %>%
rename("number of patients" = "n_unique(CO.ID)")
visits_per_centre <- test %>%
group_by(Centre.ID.x) %>%
summarise(n = n()) %>%
rename("number of visits" = "n")
centre_stats <- full_join(patients_per_centre, visits_per_centre, by = "Centre.ID.x")
write.csv(centre_stats, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/centre_stats.csv", row.names = F)
# NEW
participants$Date.of.Birth <- as.Date(participants$Date.of.Birth, format = "%d/%m/%Y")
Today = Sys.Date()
participants$Age <- as.numeric((Today - participants$Date.of.Birth) / 365)
participants$Age.category <-
cut(participants$Age,
breaks = c(0,10,20,30,40,50,60,70,80,90,100),
labels = c("0-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70", "71-80", "81-90", "91-100"))
ages <- select(participants, Age.category,)
age_distribution <- ages %>%
group_by(Age.category) %>%
summarise(n = n())
write.csv(age_distribution, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/age_distribution.csv", row.names = F)
# N.B: if an age category is empty here (i.e. no one of that age) then it is omitted from this table
age_stats <- participants %>%
summarise(median_age = median(participants$Age),
max_age = max(participants$Age),
min_age = min(participants$Age))
write.csv(age_stats, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/age_stats.csv", row.names = F)
medication_clean <- medication
medication_clean$coid_asse_id <- paste(medication_clean$CO.ID, medication_clean$assessment_id)
# note column is always empty / "NULL", so remove it
medication_clean <- select(medication_clean, -"Note")
medication_clean <- medication_clean %>%
rename("assessment_id" = "Assessment.ID")
# Adding assessment date to medication_clean
test2 <- select(longitudinal, c("Assessment.ID", "Date.of.Assessment"))
test2 <- test2 %>%
rename("assessment_id" = "Assessment.ID")
medication_clean <- left_join(medication_clean, test2, by = c("assessment_id"))
medication_clean$Date.of.Assessment <- as.Date(medication_clean$Date.of.Assessment, format = "%d/%m/%Y")
print("Let's see which units have been used:")
table(medication_clean$Unit)
# identify entries which used anomalous units
units_mcg <- subset(medication_clean, Unit == "mcg")
#correct the dose value by /1000 (mcg to mg)
medication_clean$Dose <-
ifelse(medication_clean$Unit == "mcg",
as.numeric(medication_clean$Dose) / 1000,
as.numeric(medication_clean$Dose))
#correct the unit name (also include the NULL units here) - MIGHT WANT TO REMOVE THIS TO ALLOW QUALITY CHECKING LATER - MAYBE SOME ENTRIES INCLUDE MCG VALUES BUT SAY THEY'RE MG...
medication_clean$Unit <-
ifelse(medication_clean$Unit == "mcg" | medication_clean$Unit == "NULL",
as.character("mg"),
as.character(medication_clean$Unit))
#checking that all units are the same (mcg)
table(medication_clean$Unit)
prednisoloneratio <- 5
dexamethasoneratio <- 80
medication_clean$Standardised.doses <- NA
medication_clean$Standardised.doses <- as.character(medication_clean$Standardised.doses)
medication_clean$Standardised.doses <-
ifelse(medication_clean$Medicine == "Hydrocortisone", medication_clean$Dose, NA)
medication_clean$Standardised.doses <-
ifelse(medication_clean$Medicine == "Prednisolone", (as.numeric(medication_clean$Dose) * prednisoloneratio), medication_clean$Standardised.doses)
medication_clean$Standardised.doses <-
ifelse(medication_clean$Medicine == "Dexamethasone", (as.numeric(medication_clean$Dose) * dexamethasoneratio), medication_clean$Standardised.doses)
# Let's do it first using individual doses
checkmedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_dose = mean(Standardised.doses, na.rm = TRUE),
median_dose = median(Standardised.doses, na.rm = TRUE),
sd_dose = sd(Standardised.doses, na.rm = TRUE),
min_dose = min(Standardised.doses, na.rm = TRUE),
max_dose = max(Standardised.doses, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
# Now let's do it for total_daily_doses
medperpatient <- medication_clean %>%
group_by(assessment_id) %>%
summarise(total_standardised_daily_dose = sum(Standardised.doses, na.rm = TRUE))
medication_clean <- full_join(medication_clean, medperpatient, by = "assessment_id")
checkdailymedstats <- medication_clean %>%
group_by(Medicine) %>%
summarise(mean_standardised_dose = mean(total_standardised_daily_dose, na.rm = TRUE),
median_standardised_dose = median(total_standardised_daily_dose, na.rm = TRUE),
sd_standardised_dose = sd(total_standardised_daily_dose, na.rm = TRUE),
min_standardised_dose = min(total_standardised_daily_dose, na.rm = TRUE),
max_standardised_dose = max(total_standardised_daily_dose, na.rm = TRUE)) %>%
mutate_if(is.numeric, ~round(., 2))
medication_clean$Time <-
ifelse(medication_clean$Time!=0,
as.numeric(medication_clean$Time),
NA)
medication_clean$dose_time_hours <- as.numeric(medication_clean$Time / 3600)
# times show up as 8.0 (for 8am), 21.0 (for 9pm) etc. This is useful for subsequent analysis using time :)
medication_clean$assessment_entry <-
ave(medication_clean$CO.ID,
medication_clean$assessment_id,
FUN = seq_along)
totalmed_1st_entry <-
medication_clean %>%
filter(assessment_entry==1)
totalmed_2nd_entry <-
medication_clean %>%
filter(assessment_entry==2)
totalmed_3rd_entry <-
medication_clean %>%
filter(assessment_entry==3)
totalmed_4th_entry <-
medication_clean %>%
filter(assessment_entry==4)
totalmed_5th_entry <-
medication_clean %>%
filter(assessment_entry==5)
totalmed_6th_entry <-
medication_clean %>%
filter(assessment_entry==6)
#now we can get rid of the assessment entry column
# medication$assessment_entry <- NULL
totalmed_1st_entry$assessment_entry <- NULL
totalmed_2nd_entry$assessment_entry <- NULL
totalmed_3rd_entry$assessment_entry <- NULL
totalmed_4th_entry$assessment_entry <- NULL
totalmed_5th_entry$assessment_entry <- NULL
totalmed_6th_entry$assessment_entry <- NULL
#then add the appropriate suffix based on the assessment_entry number to each column in these frames to make them different before joining
colnames(totalmed_1st_entry) <-
paste(colnames(totalmed_1st_entry), 1, sep="_")
colnames(totalmed_2nd_entry) <-
paste(colnames(totalmed_2nd_entry), 2, sep="_")
colnames(totalmed_3rd_entry) <-
paste(colnames(totalmed_3rd_entry), 3, sep="_")
colnames(totalmed_4th_entry) <-
paste(colnames(totalmed_4th_entry), 4, sep="_")
colnames(totalmed_5th_entry) <-
paste(colnames(totalmed_5th_entry), 5, sep="_")
colnames(totalmed_6th_entry) <-
paste(colnames(totalmed_6th_entry), 6, sep="_")
totalmed_1st_entry <- totalmed_1st_entry %>%
rename("CO.ID" = "CO.ID_1",
"assessment_id" = "assessment_id_1")
totalmed_2nd_entry <- totalmed_2nd_entry %>%
rename("CO.ID" = "CO.ID_2",
"assessment_id" = "assessment_id_2")
totalmed_3rd_entry <- totalmed_3rd_entry %>%
rename("CO.ID" = "CO.ID_3",
"assessment_id" = "assessment_id_3")
totalmed_4th_entry <- totalmed_4th_entry %>%
rename("CO.ID" = "CO.ID_4",
"assessment_id" = "assessment_id_4")
totalmed_5th_entry <- totalmed_5th_entry %>%
rename("CO.ID" = "CO.ID_5",
"assessment_id" = "assessment_id_5")
totalmed_6th_entry <- totalmed_6th_entry %>%
rename("CO.ID" = "CO.ID_6",
"assessment_id" = "assessment_id_6")
meds_wide <- totalmed_1st_entry %>%
left_join(totalmed_2nd_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_3rd_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_4th_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_5th_entry, by=c("CO.ID", "assessment_id")) %>%
left_join(totalmed_6th_entry, by=c("CO.ID", "assessment_id"))
#add in 'total daily dose' from 'medperpatient' to meds_wide
totaldailyformedswide <- medperpatient %>%
select(assessment_id, total_standardised_daily_dose)
meds_wide <- meds_wide %>%
left_join(select(medperpatient, assessment_id, total_standardised_daily_dose), by = "assessment_id")
meds_wide <- meds_wide %>%
select_if(function(x) !all(is.na(x)))
medperpatient$number_of_doses <- medication_clean %>%
group_by(assessment_id) %>%
summarise(max(assessment_entry))
medicationentries <- medication_clean %>%
group_by(assessment_id) %>%
summarise(n = n())
overallvisitsstats$visitswithmed <- n_unique(meds_wide$assessment_id)
overallvisitsstats$patientswithmed <- n_unique(meds_wide$CO.ID)
write.csv(overallvisitsstats, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/overallvisitsstats.csv", row.names = F)
medication_clean$prescribedmedperpatient <- paste(medication_clean$coid_asse_id, medication_clean$Medicine)
medprescriptions <- subset(medication_clean, assessment_entry == 1)
all_prescriptions <- medprescriptions %>%
group_by(Medicine) %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n) %>%
select(1,2,5,4,3)
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
prescriptions_1_to_5_yrs <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment < "2024-02-27") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
write.csv(all_prescriptions, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/all_prescriptions.csv", row.names = F)
write.csv(prescriptions_last_12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/prescriptions_last_12m.csv", row.names = F)
write.csv(prescriptions_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/prescriptions_1_to_5_yrs.csv", row.names = F)
othermeds <- subset(medication_clean, medicine == "other")
othermeds <- subset(medication_clean, Medicine == "other")
View(othermeds)
othermeds <- subset(medication_clean, Medicine == "Other")
View(othermeds)
valuesdrop <- c("Result", "assessments.content.labs.date_and_time_lab", "Time")
labsvalues <- labs[, !names(labs) %in% valuesdrop]
labsvalues <- labsvalues %>%
pivot_wider(names_from = "Type",
values_from = "Value")
interpdrop <- c("Value", "assessments.content.labs.date_and_time_lab", "Time")
labsinterp <- labs[, !names(labs) %in% interpdrop]
labsinterp <- labsinterp %>%
pivot_wider(names_from = "Type",
values_from = "Result")
labs_wide <- left_join(labsvalues, labsinterp, by = c("CO.ID", "Assessment.ID", "Date"))
names(labs_wide) <- gsub(x = names(labs_wide), pattern = ".x",
replacement = ".value")
names(labs_wide) <- gsub(x = names(labs_wide), pattern = ".y",
replacement = ".interpretation")
names(labs_wide)
CAH_biomarkers <- select(labs_wide, c("Assessment.ID", "CO.ID", "Date", "17-OHP.value", "17-OHP.interpretation", "Androstenedione.value", "Androstenedione.interpretation"))
CAH_biomarkers$`17-OHP.unit` <- str_extract(CAH_biomarkers$`17-OHP.value`, "[aA-zZ]+.?[aA-zZ]+.?[aA-zZ]*+")
CAH_biomarkers$`17-OHP.value` <- as.numeric(str_extract(CAH_biomarkers$`17-OHP.value`, "[0-9]+.?[0-9]*+"))
CAH_biomarkers$`Androstenedione.unit` <- str_extract(CAH_biomarkers$`Androstenedione.value`, "[aA-zZ]+.?[aA-zZ]+.?[aA-zZ]*+")
CAH_biomarkers$`Androstenedione.value` <- as.numeric(str_extract(CAH_biomarkers$`Androstenedione.value`, "[0-9]+.?[0-9]*+"))
CAH_biomarkers_order <- c("Assessment.ID", "CO.ID", "Date", "17-OHP.value", "17-OHP.unit", "17-OHP.interpretation", "Androstenedione.value", "Androstenedione.unit", "Androstenedione.interpretation")
CAH_biomarkers <- CAH_biomarkers[, CAH_biomarkers_order]
write.csv(CAH_biomarkers, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers.csv", row.names = F)
View(CAH_biomarkers)
# Now time frames
CAH_biomarkers$Date <- as.Date(CAH_biomarkers$Date, format = "%d/%m/%Y")
CAH_biomarkers_last12m <- CAH_biomarkers %>%
filter(Date > > "2024-02-27")
CAH_biomarkers_last12m <- CAH_biomarkers %>%
filter(Date > "2024-02-27")
CAH_biomarkers_1_to_5_yrs <- CAH_biomarkers %>%
filter(Date < "2024-02-27")
View(CAH_biomarkers_1_to_5_yrs)
View(CAH_biomarkers_last12m)
CAH_biomarkers_last12m <- CAH_biomarkers %>%
filter(Date > "2024-02-07")
CAH_biomarkers_1_to_5_yrs <- CAH_biomarkers %>%
filter(Date < "2024-02-07")
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment > "2024-02-07") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
prescriptions_1_to_5_yrs <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment < "2024-02-07") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
CAH_biomarkers_last12m <- CAH_biomarkers %>%
filter(Date => "2024-02-07")
CAH_biomarkers_last12m <- CAH_biomarkers %>%
filter(Date >= "2024-02-07")
CAH_biomarkers_1_to_5_yrs <- CAH_biomarkers %>%
filter(Date <= "2024-02-07")
CAH_biomarkers_1_to_5_yrs <- CAH_biomarkers %>%
filter(Date < "2024-02-07")
prescriptions_last_12m <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment >= "2024-02-07") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
prescriptions_1_to_5_yrs <- medprescriptions %>%
group_by(Medicine) %>%
filter(Date.of.Assessment < "2024-02-07") %>%
summarise(n = n()) %>%
pivot_wider(names_from = Medicine,
values_from = n)
write.csv(CAH_biomarkers_last12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_last12m.csv", row.names = F)
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F)
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F, na.strings= c("", "NA"))
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F, na.strings= c("NA"))
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F, na.omit()))
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F, na.omit())
write.csv(CAH_biomarkers_last12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_last12m.csv", row.names = F, na.omit())
write.csv(CAH_biomarkers_last12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_last12m.csv", row.names = F, na.omit())
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F, na.omit())
write.csv(CAH_biomarkers_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_1_to_5_yrs.csv", row.names = F, na = "")
write.csv(CAH_biomarkers_last12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/CAH_biomarkers_last12m.csv", row.names = F, na = "")
overallvisitsstats$number_of_labs_entries <- length(labs_wide$CO.ID)
overallvisitsstats$number_of_lab_patients <- n_unique(labs_wide$CO.ID)
View(overallvisitsstats)
overallvisitsstats$number_of_labs_entries <- length(labs_wide$CO.ID)
overallvisitsstats$number_of_lab_patients <- n_unique(labs_wide$CO.ID)
write.csv(overallvisitsstats, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/overallvisitsstats.csv", row.names = F)
write.csv(entryrecords, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/entryrecords.csv", row.names = F)
names(longitudinal)
BMI <- select(longitudinal, c("Assessment.ID", "Date.of.Assessment" ,"BMI"))
View(BMI)
BMI_stats <- BMI %>%
group_by(BMI) %>%
summarise(n = n())
View(BMI_stats)
remove(BMI_stats)
remove(BMI)
BMIframe <- select(longitudinal, c("Assessment.ID", "Date.of.Assessment", "BMI"))
BMIframe <- select(longitudinal, c("Assessment.ID", "Date.of.Assessment", "BMI"))
BMIframe$Class <- ""
BMIframe$Class [BMIframe$BMI <18.5] <- "Underweight"
BMIframe$Class [BMIframe$BMI >= 18.5 & BMIframe$BMI <25] <- "Normal"
BMIframe$Class [BMIframe$BMI >= 25 & BMIframe$BMI <30] <- "Overweight"
BMIframe$Class [BMIframe$BMI >=30 & BMIframe$BMI <35] <- "Obese"
BMIframe$Class [BMIframe$BMI >=35] <- "Extremely obese"
BMIframe$Class[BMIframe$Class == ""] <- "Missing"
View(BMIframe)
BMIstats <- BMIframe %>%
group_by(Centre.ID, Class) %>%
summarise(n = n()) %>%
pivot_wider(names_from = "Class",
values_from = "n") %>%
select(1,4,5,6,3,2)
BMIstats <- BMIframe %>%
group_by(Class) %>%
summarise(n = n()) %>%
pivot_wider(names_from = "Class",
values_from = "n") %>%
select(1,4,5,6,3,2)
View(BMIstats)
# time frames
BMIframe_last_12m <- BMIframe %>%
filter(Date.of.Assessment >= "2024-02-07")
BMIframe_1_to_5_yrs <- BMIframe %>%
filter(Date.of.Assessment < "2024-02-07")
BMIstats_last_12m <- BMIframe_last_12m %>%
group_by(Class) %>%
summarise(n = n()) %>%
pivot_wider(names_from = "Class",
values_from = "n") %>%
select(1,4,5,6,3,2)
BMIstats_1_to_5_yrs <- BMIframe_1_to_5_yrs %>%
group_by(Class) %>%
summarise(n = n()) %>%
pivot_wider(names_from = "Class",
values_from = "n") %>%
select(1,4,5,6,3,2)
View(BMIstats)
View(BMIstats_1_to_5_yrs)
View(BMIstats_last_12m)
write.csv(BMIstats_last_12m, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/BMIstats_last_12m.csv", row.names = F, na = "")
write.csv(BMIstats_1_to_5_yrs, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/BMIstats_1_to_5_yrs.csv", row.names = F, na = "")
names(longitudinal)
# just need to extract blood pressure columns
blood_pressures <- select(longitudinal, c("Assessment.ID", "CO.ID", "Systolic.Blood.Pressure", "Diastolic.Blood.Pressure"))
View(blood_pressures)
write.csv(blood_pressures, file = "C:/Users/md1rwe/Documents/Data extractions from I-CAH/Feb 2025/I-CAH_data_Feb_2025/outputs/blood_pressures.csv", row.names = F, na = "")
View(labs)
View(labs_wide)
n_unique(labs_wide$CO.ID)
View(BMIstats_1_to_5_yrs)
View(BMIframe_1_to_5_yrs)
